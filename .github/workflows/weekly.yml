name: Weekly Google Reviews

on:
  schedule:
    # Runs every Monday at 15:00 UTC (9:00 AM Denver during MDT, 8:00 AM during MST)
    - cron: "0 15 * * 1"
  workflow_dispatch: {} # lets you run it manually from the Actions tab

permissions:
  contents: write # <-- allow pushing the updated state file

jobs:
  run:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # ensure we can commit back to the same branch

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Recreate the service account file from the secret you already added
      - name: Write service account file
        run: |
          echo '${{ secrets.SERVICE_ACCOUNT_JSON }}' > service_account.json
          echo "GOOGLE_APPLICATION_CREDENTIALS=$PWD/service_account.json" >> $GITHUB_ENV

      - name: Run script
        env:
          GOOGLE_MAPS_API_KEY: ${{ secrets.GOOGLE_MAPS_API_KEY }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # optional
        run: |
          python reviews.py

      # Persist the state file so next run can compute weekly deltas
      - name: Commit updated state file
        if: always()
        run: |
          if [ -f state_reviews.json ]; then
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add -f state_reviews.json   # <- force add even if ignored
            if git diff --cached --quiet; then
              echo "No changes to commit"
            else
              git commit -m "Update state_reviews.json [skip ci]"
              git push
            fi
          else
            echo "state_reviews.json not found (nothing to persist)."
          fi

      # Optional: keep outputs/logs/state from each run as artifacts too
      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: weekly-output
          path: |
            reports/**
            *.log
            state_reviews.json
          if-no-files-found: ignore
